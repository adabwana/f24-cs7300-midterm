{"title":"Jaryt Salvo","markdown":{"yaml":{"format":{"html":{"toc":true,"toc-depth":4,"theme":"cosmo","number-sections":false,"output-file":"index.html"}},"fontsize":"0.9em","code-block-background":true,"include-in-header":{"text":"<link rel = \"icon\" href = \"data:,\" />"},"toc-title-numbers":false,"number-depth":0},"headingText":"Jaryt Salvo","containsRefs":false,"markdown":"\n<style></style><style>.printedClojure .sourceCode {\n  background-color: transparent;\n  border-style: none;\n}\n</style><style>.clay-limit-image-width .clay-image {max-width: 100%}\n.clay-side-by-side .sourceCode {margin: 0}\n.clay-side-by-side {margin: 1em 0}\n</style>\n<script src=\"index_files/md-default0.js\" type=\"text/javascript\"></script><script src=\"index_files/md-default1.js\" type=\"text/javascript\"></script>\n\n\n**Date:** **10/26/24**\n\n**Fall 2024 | CS7300 Unsupervised Learning**\n\n*************\n\nThis project focuses on implementing and comparing different unsupervised learning techniques, specifically autoencoders and dimensionality reduction methods. The project is divided into two main questions, each addressing a specific aspect of unsupervised learning.\n\n### Question 1: Super-resolution with Autoencoders (50 Points)\n\nIn this part, we implement a super-resolution task using autoencoders on the MNIST dataset. The main steps include:\n\n1. **Data Preprocessing:** Loading the MNIST dataset and adding noise to the original images.\n2. **Autoencoder Design:** Implementing a convolutional autoencoder using PyTorch.\n3. **Model Training:** Training the autoencoder to reconstruct clean images from noisy inputs.\n4. **Evaluation:** Plotting training curves and visualizing results on test data.\n\nKey features of the implementation:\n                            \n- Custom MNIST dataset loader\n- Convolutional autoencoder architecture\n- Noise addition function for data augmentation\n- Training and evaluation loops\n- Visualization of original, noisy, and reconstructed images\n\n### Question 2: Dimensionality Reduction (50 Points)\n\nThis section compares two dimensionality reduction techniques: Principal Component Analysis (PCA) and Autoencoders, using the Fashion MNIST dataset. The main steps include:\n\n1. **Data Preprocessing:** Loading the Fashion MNIST dataset.\n2. **PCA Implementation:** Using scikit-learn's PCA for baseline dimensionality reduction.\n3. **Autoencoder Implementation:** Designing and training an autoencoder for dimensionality reduction.\n4. **Comparison:** Evaluating both methods for reduced dimensionalities of 1, 2, and 3.\n5. **Visualization:** Displaying reconstructed images and training curves.\n\nKey features of the implementation:\n\n- Custom Fashion MNIST dataset loader\n- Flexible autoencoder architecture for different encoded dimensions\n- PCA implementation using scikit-learn\n- Comparative analysis of PCA and autoencoder performance\n- Visualization of reconstructed images for both methods\n\n### Technologies and Libraries Used:\n\n- Python as the primary programming language\n- PyTorch for neural network implementation\n- NumPy for numerical computations\n- Matplotlib for data visualization\n- scikit-learn for PCA implementation\n\nThis project demonstrates the application of autoencoders in both super-resolution tasks and dimensionality reduction, showcasing their versatility in unsupervised learning. It also provides a comparative analysis between traditional (PCA) and modern (autoencoder) dimensionality reduction techniques, offering insights into their respective strengths and use cases.\n\nThe code for both questions is implemented in separate Python scripts (`question_1.py` and `question_2.py`), allowing for modular development and easy comparison of results.\n\n\n```{=html}\n<div style=\"background-color:grey;height:2px;width:100%;\"></div>\n```\n\n\n\n```{=html}\n<div></div>\n```\n","srcMarkdownNoYaml":"\n<style></style><style>.printedClojure .sourceCode {\n  background-color: transparent;\n  border-style: none;\n}\n</style><style>.clay-limit-image-width .clay-image {max-width: 100%}\n.clay-side-by-side .sourceCode {margin: 0}\n.clay-side-by-side {margin: 1em 0}\n</style>\n<script src=\"index_files/md-default0.js\" type=\"text/javascript\"></script><script src=\"index_files/md-default1.js\" type=\"text/javascript\"></script>\n\n\n### Jaryt Salvo\n**Date:** **10/26/24**\n\n**Fall 2024 | CS7300 Unsupervised Learning**\n\n*************\n\nThis project focuses on implementing and comparing different unsupervised learning techniques, specifically autoencoders and dimensionality reduction methods. The project is divided into two main questions, each addressing a specific aspect of unsupervised learning.\n\n### Question 1: Super-resolution with Autoencoders (50 Points)\n\nIn this part, we implement a super-resolution task using autoencoders on the MNIST dataset. The main steps include:\n\n1. **Data Preprocessing:** Loading the MNIST dataset and adding noise to the original images.\n2. **Autoencoder Design:** Implementing a convolutional autoencoder using PyTorch.\n3. **Model Training:** Training the autoencoder to reconstruct clean images from noisy inputs.\n4. **Evaluation:** Plotting training curves and visualizing results on test data.\n\nKey features of the implementation:\n                            \n- Custom MNIST dataset loader\n- Convolutional autoencoder architecture\n- Noise addition function for data augmentation\n- Training and evaluation loops\n- Visualization of original, noisy, and reconstructed images\n\n### Question 2: Dimensionality Reduction (50 Points)\n\nThis section compares two dimensionality reduction techniques: Principal Component Analysis (PCA) and Autoencoders, using the Fashion MNIST dataset. The main steps include:\n\n1. **Data Preprocessing:** Loading the Fashion MNIST dataset.\n2. **PCA Implementation:** Using scikit-learn's PCA for baseline dimensionality reduction.\n3. **Autoencoder Implementation:** Designing and training an autoencoder for dimensionality reduction.\n4. **Comparison:** Evaluating both methods for reduced dimensionalities of 1, 2, and 3.\n5. **Visualization:** Displaying reconstructed images and training curves.\n\nKey features of the implementation:\n\n- Custom Fashion MNIST dataset loader\n- Flexible autoencoder architecture for different encoded dimensions\n- PCA implementation using scikit-learn\n- Comparative analysis of PCA and autoencoder performance\n- Visualization of reconstructed images for both methods\n\n### Technologies and Libraries Used:\n\n- Python as the primary programming language\n- PyTorch for neural network implementation\n- NumPy for numerical computations\n- Matplotlib for data visualization\n- scikit-learn for PCA implementation\n\nThis project demonstrates the application of autoencoders in both super-resolution tasks and dimensionality reduction, showcasing their versatility in unsupervised learning. It also provides a comparative analysis between traditional (PCA) and modern (autoencoder) dimensionality reduction techniques, offering insights into their respective strengths and use cases.\n\nThe code for both questions is implemented in separate Python scripts (`question_1.py` and `question_2.py`), allowing for modular development and easy comparison of results.\n\n\n```{=html}\n<div style=\"background-color:grey;height:2px;width:100%;\"></div>\n```\n\n\n\n```{=html}\n<div></div>\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":4,"number-sections":false,"include-in-header":{"text":"<link rel = \"icon\" href = \"data:,\" />"},"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":"cosmo","fontsize":"0.9em","code-block-background":true,"toc-title-numbers":false,"number-depth":0},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html","revealjs"]}